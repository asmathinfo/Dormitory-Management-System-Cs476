package view;

import javax.swing.DefaultListModel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.ListModel;

import java.awt.Font;
import java.util.ArrayList;

import javax.swing.JList;
import javax.swing.JScrollPane;

import database.DBConnection;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JPanel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JTabbedPane;

import java.awt.Color;

import javax.swing.border.BevelBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.MatteBorder;
import javax.swing.border.LineBorder;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.UIManager;

/**
 *
 * @author Nazli
 */
public class DormListWindow extends javax.swing.JFrame {
	private JList dormList;
	private JList roomList;
	public static String selectedDorm;
	DefaultListModel listModelRooms;
	/**
	 * Creates new form DormWindow
	 */
	public DormListWindow() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		dormListWindowPanel = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		JLabel label = new JLabel("Dorm List");
		label.setFont(new Font("Tahoma", Font.BOLD, 12));
		
		JScrollPane scrollPane = new JScrollPane();
		
		listModelRooms = new DefaultListModel();
		roomList = new JList(listModelRooms);
		
		roomList.setBorder(new BevelBorder(BevelBorder.LOWERED, new Color(0, 0, 128), new Color(176, 224, 230), new Color(0, 0, 128), new Color(176, 224, 230)));
		roomList.setFont(new Font("Tahoma", Font.PLAIN, 12));
		roomList.setForeground(Color.BLACK);
		
		JLabel lblRooms = new JLabel("Rooms");
		lblRooms.setFont(new Font("Tahoma", Font.BOLD, 12));

		javax.swing.GroupLayout gl_dormWindowPanel = new javax.swing.GroupLayout(
				dormListWindowPanel);
		gl_dormWindowPanel.setHorizontalGroup(
			gl_dormWindowPanel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_dormWindowPanel.createSequentialGroup()
					.addGap(35)
					.addGroup(gl_dormWindowPanel.createParallelGroup(Alignment.LEADING)
						.addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 194, GroupLayout.PREFERRED_SIZE)
						.addComponent(label, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE))
					.addGap(41)
					.addGroup(gl_dormWindowPanel.createParallelGroup(Alignment.LEADING)
						.addComponent(lblRooms, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE)
						.addComponent(roomList, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE))
					.addContainerGap(37, Short.MAX_VALUE))
		);
		gl_dormWindowPanel.setVerticalGroup(
			gl_dormWindowPanel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_dormWindowPanel.createSequentialGroup()
					.addGap(18)
					.addGroup(gl_dormWindowPanel.createParallelGroup(Alignment.BASELINE)
						.addComponent(label, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
						.addComponent(lblRooms))
					.addGap(13)
					.addGroup(gl_dormWindowPanel.createParallelGroup(Alignment.BASELINE)
						.addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
						.addComponent(roomList, GroupLayout.PREFERRED_SIZE, 201, GroupLayout.PREFERRED_SIZE))
					.addContainerGap())
		);
		DBConnection conn = new DBConnection();
		fillDormList(conn);
		dormList.setBorder(new BevelBorder(BevelBorder.LOWERED, new Color(0, 0, 128), new Color(176, 224, 230), new Color(176, 224, 230), new Color(176, 224, 230)));
		dormList.setFont(new Font("Tahoma", Font.PLAIN, 12));
		dormList.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				clickMouse(evt);
			}
		});
		scrollPane.setViewportView(dormList);
		dormListWindowPanel.setLayout(gl_dormWindowPanel);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				dormListWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				dormListWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents
	
	private void clickMouse(MouseEvent evt) {
		listModelRooms.clear();
		if (evt.getClickCount() == 2) {
			System.out.println(dormList.getSelectedValue());
			String sel = (String) dormList.getSelectedValue();
			selectedDorm = sel.substring(0, sel.indexOf(" -")); 
			DBConnection conn = new DBConnection();
			fillRooms(conn);
		}	
	}
	private void fillRooms(DBConnection conn) {
		conn.retrieveRooms();
		String rooms[] = new String[conn.getRooms().size()];
		for (int i = 0; i < conn.getRooms().size(); i++) {
			rooms[i] = (String) conn.getRooms().get(i);
			listModelRooms.addElement("Room - " + rooms[i]);
		}
	}

	private void fillDormList(DBConnection conn) {
		conn.retrieveDormInfo();
		String dorms[] = new String[conn.getDorms().size()];
		for (int i = 0; i < conn.getDorms().size(); i++) {
			dorms[i] = (String) conn.getDorms().get(i);
		}
		dormList = new JList(dorms);
	}

	public JList getList() {
		return dormList;
	}
	
	
	private javax.swing.JPanel dormListWindowPanel;
}
